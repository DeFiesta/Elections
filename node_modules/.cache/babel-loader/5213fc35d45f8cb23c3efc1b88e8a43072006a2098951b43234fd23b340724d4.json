{"ast":null,"code":"var _jsxFileName = \"/Users/utilisateur/exercise/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport { useRef } from 'react';\n\n// Components\nimport Navigation from './components/Navigation';\nimport Candidates from './components/Candidates';\nimport Candidate from './components/Candidate';\n\n// ABIs\nimport Voting from './abis/Voting.json';\n\n// Config\nimport config from './config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [providers, setProvider] = useState(null);\n  const [voting, setVoting] = useState(null);\n  const [candidates, setCandidates] = useState([]);\n  const [contractOwner, setContractOwner] = useState(null);\n  const [toggleAdd, setToggleAdd] = useState(false);\n  const [toggleCast, setToggleCast] = useState(false);\n  const [candidate, setCandidate] = useState({});\n  const candidateNameRef = useRef();\n  const candidateAddressRef = useRef();\n  const loadBlockchainData = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(provider);\n    const network = await provider.getNetwork();\n    const voting = new ethers.Contract(config[network.chainId].Voting.address, Voting.abi, provider);\n    setVoting(voting);\n    try {\n      const contractOwner = await voting.owner();\n      setContractOwner(contractOwner);\n    } catch (error) {\n      console.error('Error fetching contract owner:', error);\n      alert('Error fetching contract owner. Please make sure the contract is deployed correctly.');\n    }\n    const [candidateAddresses, candidateNames, candidateIds, candidateVoteCounts] = await voting.getAllCandidates();\n    const candidateArray = candidateAddresses.map((candidateAddress, index) => {\n      return {\n        address: candidateAddress,\n        name: candidateNames[index],\n        id: candidateIds[index],\n        voteCount: candidateVoteCounts[index]\n      };\n    });\n    setCandidates(candidateArray);\n    window.ethereum.on('accountsChanged', async () => {\n      window.location.reload();\n    });\n  };\n  const addCandidate = async (candidateAddress, candidateName, candidateId) => {\n    if (!account) {\n      alert('Please connect your account first');\n      return;\n    }\n    if (!voting) {\n      alert('Voting contract not loaded');\n      return;\n    }\n    if (account !== contractOwner) {\n      alert('Only the contract owner can add candidates');\n      console.log(contractOwner);\n      return;\n    }\n    try {\n      const signer = providers.getSigner();\n      const votingWithSigner = voting.connect(signer);\n      const nonce = await providers.getTransactionCount(account);\n      const normalizedCandidateAddress = ethers.utils.getAddress(candidateAddress);\n      const tx = await votingWithSigner.addCandidate(normalizedCandidateAddress, candidateName, candidateId, {\n        nonce\n      });\n      await tx.wait();\n      alert('Candidate added successfully');\n      window.location.reload();\n    } catch (error) {\n      console.error('Error adding candidate:', error);\n      alert('Error adding candidate. Please try again.');\n    }\n  };\n  const togglePopAdd = candidate => {\n    setCandidate(candidate);\n    toggleAdd ? setToggleAdd(false) : setToggleAdd(true);\n  };\n  const togglePopCast = candidate => {\n    setCandidate(candidate);\n    toggleCast ? setToggleCast(false) : setToggleCast(true);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const candidateName = candidateNameRef.current.value.trim();\n    const candidateAddress = candidateAddressRef.current.value.trim();\n    if (candidateName) {\n      await addCandidate(candidateAddress, candidateName, Candidates.length);\n      candidateNameRef.current.value = '';\n      togglePopAdd();\n    }\n  };\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      account: account,\n      setAccount: setAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home__overview\",\n      children: /*#__PURE__*/_jsxDEV(Candidates, {\n        candidates: candidates,\n        provider: providers,\n        account: account,\n        voting: voting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home__image\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        onClick: () => togglePopCast(candidates),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home__owned\",\n          children: \"cast a vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home__image\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        onClick: () => togglePopAdd(candidates),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home__contact\",\n          children: \"Add a candidate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }, this), toggleAdd && /*#__PURE__*/_jsxDEV(Candidate, {\n      candidates: candidates,\n      provider: providers,\n      account: account,\n      handleSubmit: handleSubmit,\n      addCandidate: addCandidate,\n      togglePopAdd: togglePopAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"E4KQWRfe9oPxFgZsH3E1IjIMlPo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","useRef","Navigation","Candidates","Candidate","Voting","config","jsxDEV","_jsxDEV","App","_s","account","setAccount","providers","setProvider","voting","setVoting","candidates","setCandidates","contractOwner","setContractOwner","toggleAdd","setToggleAdd","toggleCast","setToggleCast","candidate","setCandidate","candidateNameRef","candidateAddressRef","loadBlockchainData","provider","Web3Provider","window","ethereum","network","getNetwork","Contract","chainId","address","abi","owner","error","console","alert","candidateAddresses","candidateNames","candidateIds","candidateVoteCounts","getAllCandidates","candidateArray","map","candidateAddress","index","name","id","voteCount","on","location","reload","addCandidate","candidateName","candidateId","log","signer","getSigner","votingWithSigner","connect","nonce","getTransactionCount","normalizedCandidateAddress","utils","getAddress","tx","wait","togglePopAdd","togglePopCast","handleSubmit","event","preventDefault","current","value","trim","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/Users/utilisateur/exercise/src/App.js"],"sourcesContent":["  import { useEffect, useState } from 'react'\n  import { ethers } from 'ethers'\n  import { useRef } from 'react';\n\n  // Components\n  import Navigation from './components/Navigation'\n  import Candidates from './components/Candidates'\n  import Candidate from './components/Candidate'\n\n  // ABIs\n  import Voting from './abis/Voting.json'\n\n  // Config\n  import config from './config.json'\n\n  function App() {\n\n    const [account, setAccount] = useState(null)\n    const [providers, setProvider] = useState(null)\n\n    const [voting, setVoting] = useState(null)\n    const [candidates, setCandidates] = useState([])\n\n    const [contractOwner, setContractOwner] = useState(null);\n    const [toggleAdd, setToggleAdd] = useState(false);\n    const [toggleCast, setToggleCast] = useState(false);\n\n    const [candidate, setCandidate] = useState({});\n\n    const candidateNameRef = useRef();\n    const candidateAddressRef = useRef();\n\n\n\n    const loadBlockchainData = async () => {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(provider);\n\n      const network = await provider.getNetwork();\n\n      const voting = new ethers.Contract(config[network.chainId].Voting.address, Voting.abi, provider);\n      setVoting(voting);\n\n      try {\n        const contractOwner = await voting.owner();\n        setContractOwner(contractOwner);\n      } catch (error) {\n        console.error('Error fetching contract owner:', error);\n        alert('Error fetching contract owner. Please make sure the contract is deployed correctly.');\n      }\n\n      const [candidateAddresses, candidateNames, candidateIds, candidateVoteCounts] = await voting.getAllCandidates();\n      const candidateArray = candidateAddresses.map((candidateAddress, index) => {\n        return {\n          address: candidateAddress,\n          name: candidateNames[index],\n          id: candidateIds[index],\n          voteCount: candidateVoteCounts[index],\n        };\n      });\n      setCandidates(candidateArray);\n\n      window.ethereum.on('accountsChanged', async () => {\n        window.location.reload();\n      });\n    };\n\n\n\n    const addCandidate = async (candidateAddress, candidateName, candidateId) => {\n      if (!account) {\n        alert('Please connect your account first');\n        return;\n      }\n\n      if (!voting) {\n        alert('Voting contract not loaded');\n        return;\n      }\n\n      if (account !== contractOwner) {\n        alert('Only the contract owner can add candidates');\n        console.log(contractOwner)\n        return;\n      }\n\n      try {\n        const signer = providers.getSigner();\n        const votingWithSigner = voting.connect(signer);\n        const nonce = await providers.getTransactionCount(account);\n\n        const normalizedCandidateAddress = ethers.utils.getAddress(candidateAddress);\n\n        const tx = await votingWithSigner.addCandidate(normalizedCandidateAddress, candidateName, candidateId, { nonce });\n        await tx.wait();\n\n        alert('Candidate added successfully');\n        window.location.reload();\n      } catch (error) {\n        console.error('Error adding candidate:', error);\n        alert('Error adding candidate. Please try again.');\n      }\n    };\n\n\n    const togglePopAdd = (candidate) => {\n      setCandidate(candidate);\n      toggleAdd ? setToggleAdd(false) : setToggleAdd(true);\n    };\n\n    const togglePopCast = (candidate) => {\n      setCandidate(candidate);\n      toggleCast ? setToggleCast(false) : setToggleCast(true);\n    };\n\n\n\n    const handleSubmit = async (event) => {\n      event.preventDefault();\n      const candidateName = candidateNameRef.current.value.trim();\n      const candidateAddress = candidateAddressRef.current.value.trim();\n\n      if (candidateName) {\n        await addCandidate(candidateAddress, candidateName, Candidates.length);\n        candidateNameRef.current.value = '';\n        togglePopAdd();\n      }\n    };\n\n\n    useEffect(() => {\n      loadBlockchainData()\n    }, [])\n\n\n\n    return (\n      <div>\n        <Navigation account = {account} setAccount = {setAccount} />\n\n          <div className='home__overview'>\n              <Candidates candidates = {candidates} provider = {providers} account = {account} voting = {voting} />\n          </div>\n\n          <div className='home__image'>\n                <div className='cards' onClick={() => togglePopCast(candidates)}>\n                  <div className='home__owned'>\n                    cast a vote\n                  </div>\n                </div>\n\n          </div>\n\n          <div className='home__image'>\n                <div className='cards' onClick={() => togglePopAdd(candidates)}>\n                  <div className='home__contact'>\n                    Add a candidate\n                  </div>\n                </div>\n\n          </div>\n\n        {toggleAdd && (\n          <Candidate candidates = {candidates} provider = {providers} account = {account} handleSubmit = {handleSubmit} addCandidate = {addCandidate} togglePopAdd = {togglePopAdd} />\n        )}\n      </div>\n    );\n  }\n\n  export default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}