{"ast":null,"code":"var _jsxFileName = \"/Users/utilisateur/exercise/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\n\n// Components\nimport Navigation from './components/Navigation';\nimport Section from './components/Section';\nimport Product from './components/Product';\n\n// ABIs\nimport Dappazon from './abis/Voting.json';\n\n// Config\nimport config from './config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const loadBlockchainData = async () => {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n    const account = ethers.utils.getAddress(accounts[0]);\n    setAccount(account);\n  };\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Navigation, {\n      account: account,\n      setAccount: setAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"86F8VZ8lfjh6tQB+p37fx1M0D7Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","Navigation","Section","Product","Dappazon","config","jsxDEV","_jsxDEV","App","_s","account","setAccount","loadBlockchainData","accounts","window","ethereum","request","method","utils","getAddress","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/utilisateur/exercise/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { ethers } from 'ethers'\n\n// Components\nimport Navigation from './components/Navigation'\nimport Section from './components/Section'\nimport Product from './components/Product'\n\n// ABIs\nimport Dappazon from './abis/Voting.json'\n\n// Config\nimport config from './config.json'\n\nfunction App() {\n\n  const [account, setAccount] = useState(null)\n\n  const loadBlockchainData = async () => {\n    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts'})\n    const account = ethers.utils.getAddress(accounts[0])\n    setAccount(account)\n  }\n\n  useEffect(() => {\n    loadBlockchainData()\n  }, [])\n\n  return (\n    <div>\n      <Navigation account = {account} setAccount = {setAccount} />\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,QAAQ;;AAE/B;AACA,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,OAAO,MAAM,sBAAsB;;AAE1C;AACA,OAAOC,QAAQ,MAAM,oBAAoB;;AAEzC;AACA,OAAOC,MAAM,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMa,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,MAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;MAAEC,MAAM,EAAE;IAAqB,CAAC,CAAC;IAChF,MAAMP,OAAO,GAAGV,MAAM,CAACkB,KAAK,CAACC,UAAU,CAACN,QAAQ,CAAC,CAAC,CAAC,CAAC;IACpDF,UAAU,CAACD,OAAO,CAAC;EACrB,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACdc,kBAAkB,EAAE;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAa,QAAA,eACEb,OAAA,CAACN,UAAU;MAACS,OAAO,EAAIA,OAAQ;MAACC,UAAU,EAAIA;IAAW;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAExD;AAEV;AAACf,EAAA,CApBQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAsBZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}