{"ast":null,"code":"var _jsxFileName = \"/Users/utilisateur/exercise/src/components/Candidates.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Candidates = _ref => {\n  _s();\n  let {\n    candidates,\n    provider,\n    account,\n    voting\n  } = _ref;\n  const [fetchedCandidates, setFetchedCandidates] = useState([]);\n  const fetchCandidates = async () => {\n    if (!voting) return;\n    try {\n      const [candidateAddresses, candidateNames, candidateIds, candidateVoteCounts] = await voting.getAllCandidates();\n      const candidateList = [];\n      for (let i = 0; i < candidateIds.length; i++) {\n        candidateList.push({\n          id: candidateIds[i].toNumber(),\n          name: candidateNames[i],\n          address: candidateAddresses[i],\n          voteCount: candidateVoteCounts[i].toNumber()\n        });\n      }\n      setFetchedCandidates(candidateList);\n    } catch (error) {\n      console.error(\"Error fetching candidates:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchCandidates();\n  }, [voting]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message.content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Candidates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: fetchedCandidates.map(candidate => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [candidate.name, \" (\", candidate.voteCount, \" votes)\"]\n      }, candidate.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Candidates, \"DgHWrcfP4snfn4FLi5vMar3EjjU=\");\n_c = Candidates;\nexport default Candidates;\nvar _c;\n$RefreshReg$(_c, \"Candidates\");","map":{"version":3,"names":["useEffect","useState","ethers","jsxDEV","_jsxDEV","Candidates","_ref","_s","candidates","provider","account","voting","fetchedCandidates","setFetchedCandidates","fetchCandidates","candidateAddresses","candidateNames","candidateIds","candidateVoteCounts","getAllCandidates","candidateList","i","length","push","id","toNumber","name","address","voteCount","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","candidate","_c","$RefreshReg$"],"sources":["/Users/utilisateur/exercise/src/components/Candidates.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { ethers } from 'ethers'\n\nconst Candidates = ({ candidates, provider, account, voting }) => {\n  const [fetchedCandidates, setFetchedCandidates] = useState([]);\n\n  const fetchCandidates = async () => {\n    if (!voting) return;\n\n    try {\n      const [candidateAddresses, candidateNames, candidateIds, candidateVoteCounts] = await voting.getAllCandidates();\n      const candidateList = [];\n\n      for (let i = 0; i < candidateIds.length; i++) {\n        candidateList.push({\n          id: candidateIds[i].toNumber(),\n          name: candidateNames[i],\n          address: candidateAddresses[i],\n          voteCount: candidateVoteCounts[i].toNumber()\n        });\n      }\n\n      setFetchedCandidates(candidateList);\n    } catch (error) {\n      console.error(\"Error fetching candidates:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchCandidates();\n  }, [voting]);\n\n  return (\n    <div className=\"message.content\">\n      <h1>Candidates</h1>\n      <ul>\n        {fetchedCandidates.map((candidate) => (\n          <li key={candidate.id}>\n            {candidate.name} ({candidate.voteCount} votes)\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Candidates;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,UAAU,GAAGC,IAAA,IAA+C;EAAAC,EAAA;EAAA,IAA9C;IAAEC,UAAU;IAAEC,QAAQ;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAL,IAAA;EAC3D,MAAM,CAACM,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE9D,MAAMa,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAACH,MAAM,EAAE;IAEb,IAAI;MACF,MAAM,CAACI,kBAAkB,EAAEC,cAAc,EAAEC,YAAY,EAAEC,mBAAmB,CAAC,GAAG,MAAMP,MAAM,CAACQ,gBAAgB,EAAE;MAC/G,MAAMC,aAAa,GAAG,EAAE;MAExB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,YAAY,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;QAC5CD,aAAa,CAACG,IAAI,CAAC;UACjBC,EAAE,EAAEP,YAAY,CAACI,CAAC,CAAC,CAACI,QAAQ,EAAE;UAC9BC,IAAI,EAAEV,cAAc,CAACK,CAAC,CAAC;UACvBM,OAAO,EAAEZ,kBAAkB,CAACM,CAAC,CAAC;UAC9BO,SAAS,EAAEV,mBAAmB,CAACG,CAAC,CAAC,CAACI,QAAQ;QAC5C,CAAC,CAAC;MACJ;MAEAZ,oBAAoB,CAACO,aAAa,CAAC;IACrC,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED7B,SAAS,CAAC,MAAM;IACdc,eAAe,EAAE;EACnB,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;EAEZ,oBACEP,OAAA;IAAK2B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9B5B,OAAA;MAAA4B,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACnBhC,OAAA;MAAA4B,QAAA,EACGpB,iBAAiB,CAACyB,GAAG,CAAEC,SAAS,iBAC/BlC,OAAA;QAAA4B,QAAA,GACGM,SAAS,CAACZ,IAAI,EAAC,IAAE,EAACY,SAAS,CAACV,SAAS,EAAC,SACzC;MAAA,GAFSU,SAAS,CAACd,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAGtB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEV,CAAC;AAAC7B,EAAA,CAzCIF,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AA2ChB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}