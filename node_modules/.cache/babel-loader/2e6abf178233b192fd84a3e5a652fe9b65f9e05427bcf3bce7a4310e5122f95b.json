{"ast":null,"code":"var _jsxFileName = \"/Users/utilisateur/exercise/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\n\n// Components\nimport Navigation from './components/Navigation';\nimport Candidates from './components/Candidates';\n\n// ABIs\nimport Voting from './abis/Voting.json';\nconst abi = Voting;\n\n// Config\nimport config from './config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [providers, setProvider] = useState(null);\n  const [voting, setVoting] = useState(null);\n  const [candidates, setCandidate] = useState(null);\n  const [contractOwner, setContractOwner] = useState(null);\n  const loadBlockchainData = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(provider);\n    console.log(\"Provider:\", provider);\n    const network = await provider.getNetwork();\n    console.log(\"Network:\", network);\n    console.log(\"Voting contract address:\", config[network.chainId].Voting.address);\n    const voting = new ethers.Contract(config[network.chainId].Voting.address, abi, provider);\n    setVoting(voting);\n    console.log(\"Voting ABI:\", Voting);\n    try {\n      const contractOwner = await voting.owner();\n      setContractOwner(contractOwner);\n    } catch (error) {\n      console.error('Error fetching contract owner:', error);\n      alert('Error fetching contract owner. Please make sure the contract is deployed correctly.');\n    }\n    const [candidateAddresses, candidateNames, candidateIds, candidateVoteCounts] = await voting.getAllCandidates();\n    const candidateArray = candidateAddresses.map((candidateAddress, index) => {\n      return {\n        address: candidateAddress,\n        name: candidateNames[index],\n        id: candidateIds[index],\n        voteCount: candidateVoteCounts[index]\n      };\n    });\n    setCandidate(candidateArray);\n    window.ethereum.on('accountsChanged', async () => {\n      window.location.reload();\n    });\n  };\n  const addCandidate = async (candidateName, candidateId) => {\n    if (!account) {\n      alert('Please connect your account first');\n      return;\n    }\n    if (!voting) {\n      alert('Voting contract not loaded');\n      return;\n    }\n    if (account !== contractOwner) {\n      alert('Only the contract owner can add candidates');\n      return;\n    }\n    try {\n      const signer = providers.getSigner();\n      const votingWithSigner = voting.connect(signer);\n      const nonce = await providers.getTransactionCount(account);\n      const tx = await votingWithSigner.addCandidate(account, candidateName, candidateId, {\n        nonce\n      });\n      await tx.wait();\n      alert('Candidate added successfully');\n      window.location.reload();\n    } catch (error) {\n      console.error('Error adding candidate:', error);\n      alert('Error adding candidate. Please try again.');\n    }\n  };\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      account: account,\n      setAccount: setAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-4\",\n      children: /*#__PURE__*/_jsxDEV(Candidates, {\n        candidates: candidates,\n        provider: providers,\n        account: account,\n        voting: voting,\n        onAddCandidate: addCandidate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"vAxQ/QzUJio6YY+tvyrGwoYCito=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","Navigation","Candidates","Voting","abi","config","jsxDEV","_jsxDEV","App","_s","account","setAccount","providers","setProvider","voting","setVoting","candidates","setCandidate","contractOwner","setContractOwner","loadBlockchainData","provider","Web3Provider","window","ethereum","console","log","network","getNetwork","chainId","address","Contract","owner","error","alert","candidateAddresses","candidateNames","candidateIds","candidateVoteCounts","getAllCandidates","candidateArray","map","candidateAddress","index","name","id","voteCount","on","location","reload","addCandidate","candidateName","candidateId","signer","getSigner","votingWithSigner","connect","nonce","getTransactionCount","tx","wait","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onAddCandidate","_c","$RefreshReg$"],"sources":["/Users/utilisateur/exercise/src/App.js"],"sourcesContent":["  import { useEffect, useState } from 'react'\n  import { ethers } from 'ethers'\n\n  // Components\n  import Navigation from './components/Navigation'\n  import Candidates from './components/Candidates'\n\n  // ABIs\n  import Voting from './abis/Voting.json'\n  const abi = Voting\n\n  // Config\n  import config from './config.json'\n\n  function App() {\n\n    const [account, setAccount] = useState(null)\n    const [providers, setProvider] = useState(null)\n\n    const [voting, setVoting] = useState(null)\n    const [candidates, setCandidate] = useState(null)\n\n    const [contractOwner, setContractOwner] = useState(null);\n    \n\n\n\n    const loadBlockchainData = async () => {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(provider);\n      console.log(\"Provider:\", provider);\n\n      const network = await provider.getNetwork();\n      console.log(\"Network:\", network);\n      console.log(\"Voting contract address:\", config[network.chainId].Voting.address);\n\n      const voting = new ethers.Contract(config[network.chainId].Voting.address, abi, provider);\n      setVoting(voting);\n      console.log(\"Voting ABI:\", Voting);\n\n      try {\n        const contractOwner = await voting.owner();\n        setContractOwner(contractOwner);\n      } catch (error) {\n        console.error('Error fetching contract owner:', error);\n        alert('Error fetching contract owner. Please make sure the contract is deployed correctly.');\n      }\n\n      const [candidateAddresses, candidateNames, candidateIds, candidateVoteCounts] = await voting.getAllCandidates();\n      const candidateArray = candidateAddresses.map((candidateAddress, index) => {\n        return {\n          address: candidateAddress,\n          name: candidateNames[index],\n          id: candidateIds[index],\n          voteCount: candidateVoteCounts[index],\n        };\n      });\n      setCandidate(candidateArray);\n\n      window.ethereum.on('accountsChanged', async () => {\n        window.location.reload();\n      });\n    };\n\n\n\n    const addCandidate = async (candidateName, candidateId) => {\n      \n\n      if (!account) {\n        alert('Please connect your account first');\n        return;\n      }\n\n      if (!voting) {\n        alert('Voting contract not loaded');\n        return;\n      }\n\n      if (account !== contractOwner) {\n        alert('Only the contract owner can add candidates');\n        return;\n      }\n\n      try {\n        const signer = providers.getSigner();\n        const votingWithSigner = voting.connect(signer);\n        const nonce = await providers.getTransactionCount(account);\n\n\n        const tx = await votingWithSigner.addCandidate(account, candidateName, candidateId, { nonce });\n        await tx.wait();\n\n        alert('Candidate added successfully');\n        window.location.reload();\n      } catch (error) {\n        console.error('Error adding candidate:', error);\n        alert('Error adding candidate. Please try again.');\n      }\n    };\n\n    useEffect(() => {\n      loadBlockchainData()\n    }, [])\n\n    return (\n      <div>\n        <Navigation account = {account} setAccount = {setAccount} />\n\n          <div className=\"grid grid-cols-3 gap-4\">\n              <Candidates candidates = {candidates} provider = {providers} account = {account} voting = {voting} onAddCandidate={addCandidate}/>\n          </div>\n      </div>\n    );\n  }\n\n  export default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}