{"ast":null,"code":"var _jsxFileName = \"/Users/utilisateur/exercise/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\n\n// Components\nimport Navigation from './components/Navigation';\nimport Candidates from './components/Candidates';\n\n// ABIs\nimport Voting from './abis/Voting.json';\n\n// Config\nimport config from './config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [providers, setProvider] = useState(null);\n  const [voting, setVoting] = useState(null);\n  const [candidates, setCandidate] = useState(null);\n  const addCandidate = async candidateName => {\n    if (!account) {\n      alert('Please connect your account first');\n      return;\n    }\n    if (!voting) {\n      alert('Voting contract not loaded');\n      return;\n    }\n    try {\n      const signer = provider.getSigner();\n      const votingWithSigner = voting.connect(signer);\n      const candidateId = candidates.length;\n      const tx = await votingWithSigner.addCandidate(account, candidateName, candidateId);\n      await tx.wait();\n      alert('Candidate added successfully');\n      window.location.reload();\n    } catch (error) {\n      console.error('Error adding candidate:', error);\n      alert('Error adding candidate. Please try again.');\n    }\n  };\n  const loadBlockchainData = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(provider);\n    const network = await provider.getNetwork();\n    const voting = new ethers.Contract(config[network.chainId].Voting.address, Voting, provider);\n    setVoting(voting);\n    window.ethereum.on('accountsChanged', async () => {\n      window.location.reload();\n    });\n  };\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      account: account,\n      setAccount: setAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-4\",\n      children: /*#__PURE__*/_jsxDEV(Candidates, {\n        candidates: candidates,\n        provider: providers,\n        account: account,\n        voting: voting,\n        onAddCandidate: addCandidate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"albBFW9VflaAsTPrAXrgtPzn5zk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","Navigation","Candidates","Voting","config","jsxDEV","_jsxDEV","App","_s","account","setAccount","providers","setProvider","voting","setVoting","candidates","setCandidate","addCandidate","candidateName","alert","signer","provider","getSigner","votingWithSigner","connect","candidateId","length","tx","wait","window","location","reload","error","console","loadBlockchainData","Web3Provider","ethereum","network","getNetwork","Contract","chainId","address","on","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onAddCandidate","_c","$RefreshReg$"],"sources":["/Users/utilisateur/exercise/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { ethers } from 'ethers'\n\n// Components\nimport Navigation from './components/Navigation'\nimport Candidates from './components/Candidates'\n\n// ABIs\nimport Voting from './abis/Voting.json'\n\n// Config\nimport config from './config.json'\n\nfunction App() {\n\n  const [account, setAccount] = useState(null)\n  const [providers, setProvider] = useState(null)\n\n  const [voting, setVoting] = useState(null)\n  const [candidates, setCandidate] = useState(null)\n\n  \n  const addCandidate = async (candidateName) => {\n    if (!account) {\n      alert('Please connect your account first');\n      return;\n    }\n\n    if (!voting) {\n      alert('Voting contract not loaded');\n      return;\n    }\n\n    try {\n      const signer = provider.getSigner();\n      const votingWithSigner = voting.connect(signer);\n      const candidateId = candidates.length;\n\n      const tx = await votingWithSigner.addCandidate(account, candidateName, candidateId);\n      await tx.wait();\n\n      alert('Candidate added successfully');\n      window.location.reload();\n    } catch (error) {\n      console.error('Error adding candidate:', error);\n      alert('Error adding candidate. Please try again.');\n    }\n  };\n\n\n  const loadBlockchainData = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    setProvider(provider)\n\n    const network = await provider.getNetwork()\n    const voting = new ethers.Contract(config[network.chainId].Voting.address, Voting, provider)\n    setVoting(voting) \n\n    window.ethereum.on('accountsChanged', async () => {\n      window.location.reload()\n    })  \n  };\n\n\n  useEffect(() => {\n    loadBlockchainData()\n  }, [])\n\n  return (\n    <div>\n      <Navigation account = {account} setAccount = {setAccount} />\n\n        <div className=\"grid grid-cols-3 gap-4\">\n            <Candidates candidates = {candidates} provider = {providers} account = {account} voting = {voting} onAddCandidate={addCandidate}/>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}