{"ast":null,"code":"var _jsxFileName = \"/Users/utilisateur/exercise/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\n\n// Components\nimport Navigation from './components/Navigation';\nimport Section from './components/Section';\nimport Product from './components/Product';\n\n// ABIs\nimport Voting from './abis/Voting.json';\n\n// Config\nimport config from './config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [providers, setProvider] = useState(null);\n  const [voting, setVoting] = useState(null);\n  const [candidates, setCandidate] = useState(null);\n  const loadBlockchainData = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(provider);\n    const network = await provider.getNetwork();\n    const voting = new ethers.Contract(config[network.chainId].Voting.address, Voting, provider);\n    setVoting(voting);\n    const candidateCount = await voting.candidates.length();\n    const candidateAddresses = await voting.getAllCandidates();\n    const candidateList = [];\n    for (let i = 0; i < candidateCount; i++) {\n      const candidate = await voting.getCandidate(i);\n      candidateList.push(candidate);\n    }\n    setCandidate(candidateList);\n    window.ethereum.on('accountsChanged', async () => {\n      window.location.reload();\n    });\n  };\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      account: account,\n      setAccount: setAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      title: \"List of Candidates\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-3 gap-4\",\n        children: candidates.map((candidate, index) => /*#__PURE__*/_jsxDEV(Product, {\n          title: candidate[1],\n          description: `ID: ${candidate[2]} Vote Count: ${candidate[3]}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"albBFW9VflaAsTPrAXrgtPzn5zk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","Navigation","Section","Product","Voting","config","jsxDEV","_jsxDEV","App","_s","account","setAccount","providers","setProvider","voting","setVoting","candidates","setCandidate","loadBlockchainData","provider","Web3Provider","window","ethereum","network","getNetwork","Contract","chainId","address","candidateCount","length","candidateAddresses","getAllCandidates","candidateList","i","candidate","getCandidate","push","on","location","reload","children","fileName","_jsxFileName","lineNumber","columnNumber","title","className","map","index","description","_c","$RefreshReg$"],"sources":["/Users/utilisateur/exercise/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { ethers } from 'ethers'\n\n// Components\nimport Navigation from './components/Navigation'\nimport Section from './components/Section'\nimport Product from './components/Product'\n\n// ABIs\nimport Voting from './abis/Voting.json'\n\n// Config\nimport config from './config.json'\n\nfunction App() {\n\n  const [account, setAccount] = useState(null)\n  const [providers, setProvider] = useState(null)\n\n  const [voting, setVoting] = useState(null)\n  const [candidates, setCandidate] = useState(null)\n\n  const loadBlockchainData = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    setProvider(provider)\n\n    const network = await provider.getNetwork()\n    const voting = new ethers.Contract(config[network.chainId].Voting.address, Voting, provider)\n    setVoting(voting)\n\n\n    const candidateCount = await voting.candidates.length()\n    const candidateAddresses = await voting.getAllCandidates()\n    const candidateList = []\n    for (let i = 0; i < candidateCount; i++) {\n      const candidate = await voting.getCandidate(i)\n      candidateList.push(candidate)\n    }\n    setCandidate(candidateList)    \n\n\n\n\n    window.ethereum.on('accountsChanged', async () => {\n      window.location.reload()\n    })  \n  };\n\n\n  useEffect(() => {\n    loadBlockchainData()\n  }, [])\n\n  return (\n    <div>\n      <Navigation account = {account} setAccount = {setAccount} />\n      <Section title=\"List of Candidates\">\n        <div className=\"grid grid-cols-3 gap-4\">\n          {candidates.map((candidate, index) => (\n            <Product\n              key={index}\n              title={candidate[1]}\n              description={`ID: ${candidate[2]} Vote Count: ${candidate[3]}`}\n            />\n          ))}\n        </div>\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}